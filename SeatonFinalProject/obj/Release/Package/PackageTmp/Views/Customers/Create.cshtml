@model SeatonFinalProject.Models.Customer

@{
    ViewBag.Title = "Create New Customer";
}

<h2>Create Customer</h2>
<h3>@ViewBag.CreateSuccess</h3>

@if (ViewBag.CreateSuccess != "Customer created successfully.")
{
    
using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="control-label col-md-2"><b>ID</b></div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="text-danger col-md-3">
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" }) 
                @ViewBag.UniqueIdError
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>First Name</b></div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.CustFirstName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="text-danger col-md-3">
                @Html.ValidationMessageFor(model => model.CustFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>Last Name</b></div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.CustLastName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="text-danger col-md-3">
                @Html.ValidationMessageFor(model => model.CustLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>State</b></div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.CustState, new { htmlAttributes = new { @class = "form-control" } }) 
            </div>
            <div class="text-danger col-md-3">
                @Html.ValidationMessageFor(model => model.CustState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>Sales TYD</b></div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.CustSalesYTD, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="text-danger col-md-3">
                @Html.ValidationMessageFor(model => model.CustSalesYTD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>Previous Years Sales</b></div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.CustSalesPrevious, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="text-danger col-md-3">
                @Html.ValidationMessageFor(model => model.CustSalesPrevious, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
